stages:
   - install_dependencies
   - test
   - build
   - deploy

node_dependencies:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - backend/node_modules/
  script:
    - cd backend
    - npm ci
  only:
    changes:
      - backend/package-lock.json

  
angular_dependencies:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - npm ci
  # only:
  #   - dev
  only:
    changes:
      - frontend/package-lock.json
#========================================================
build_angular:
  stage: build
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules/
    policy: pull

  script:
      - cd frontend
      - ng build --configuration=dev --aot
  only:
    - dev
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - frontend/dist
    expire_in: 1 hour
#  when: manual
 #======================================================
deploy_angular_todev:
  stage: deploy
  dependencies: 
    - build_angular
  tags:
    - dev-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f frontend/dist /var/www/html/ems
  only:
    - dev
  # when: manual
#===========================================================
deploy_node_todev:
  stage: deploy

  tags:
    - dev-shell
  script:
    - pm2 list
    - cd backend
    - npm ci
    # - pm2 delete index
    - pm2 start index.js
    # - pm2 logs index
    - pm2 list
  only:
    - dev
  # when: manual

sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  # cache:
  #   key: "${CI_JOB_NAME}"
  #   paths:
  #     - .sonar/cache
  script:
    - >
      sonar-scanner 
      -Dsonar.projectKey=elitech-ecole_ems3_AXzmfloY1eE81W_XHtln
      -Dsonar.qualitygate.wait=true
      -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts, 
      -Dsonar.test.inclusions=**/*.spec.ts
      -Dsonar.sources=backend/controllers,backend/models,backend/middleware,frontend/src/app/
   
  allow_failure: true
  tags:
    - dev-docker
  only:
    - dev
