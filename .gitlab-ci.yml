stages:
   - install_dependencies
   - test
   - build
   - deployangular

node_dependencies:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - backend/node_modules/
  script:
    - cd backend
    - npm ci
  only:
    changes:
      - backend/package-lock.json


angular_dependencies:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - npm ci
  only:
    changes:
      - frontend/package-lock.json
#========================================================
build_angular:
  stage: build
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - frontend/node_modules/
    policy: pull

  script:
      - cd frontend
      - ng build --configuration=dev --aot
  only:
  - dev
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - frontend/dist
    expire_in: 1 hour
#  when: manual
 #======================================================
deployangular_todev:
  stage: deployangular
  dependencies: 
    - build_angular
  tags:
    - dev-shell
  script:
    - sudo mv -f frontend/dist /var/www/html/ems
  only:
  - dev
  # when: manual

# sonar-node:
#   stage: test
#   image: sonarsource/sonar-scanner-cli
#   needs: []
#   dependencies: []
#   script:
    # - cd backend
    # - >
    #   sonar-scanner 
    #   -Dsonar.projectKey=Typlosion14_estya-ticketing_AXzf-Al-1eE81W_XHtjA
    #   -Dsonar.host.url="$SONAR_HOST_URL"
    #   -Dsonar.login="$SONAR_TOKEN"
    #   -Dsonar.sources=frontend/src/app
    #   -Dsonar.sources=backend/

#   allow_failure: true
#   variables:
#     SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
#     GIT_DEPTH: 0
#   cache:
#     key: "sonar-${CI_PROJECT_ID}"
#     paths:
#       - ".scannerwork"
#       - ".sonar"
#   tags:
#     - dev-docker
#   when: manual 
#=======================================================================
# test:karma:
#   stage: test
#   image: trion/ng-cli-karma
#   allow_failure: false
#   script:
#     - cd frontend
#     - npm install 
#     - ng test --code-coverage --progress false --watch false
#   coverage: '/Lines \W+: (\d+\.\d+)%.*/'
#   artifacts:
#     paths:
#       - coverage/
#   tags:
#     - dev-docker
#   when: manual 


sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - >
      sonar-scanner 
      -Dsonar.projectKey=elitech-ecole_ems3_AXzmMbQe1eE81W_XHtkV
      -Dsonar.qualitygate.wait=true
      -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts, 
      -Dsonar.test.inclusions=**/*.spec.ts
      -Dsonar.sources=frontend/src/app,backend/controllers,backend/models,backend/middleware
      -Dsonar.typescript.lcov.reportPaths=frontend/coverage/lcov/lcov.info
   
  allow_failure: true
  tags:
    - dev-docker
