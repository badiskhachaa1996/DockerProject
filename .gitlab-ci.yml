stages:
  - install_dependencies
  - test
  - build
  - sast
  - dast
  - docker
  - deploy

variables:
  MOUNT_POINT: /builds/$CI_PROJECT_PATH/mnt
  SAST_IMAGE_SUFFIX: '-fips'

include:
  - template: Security/SAST.gitlab-ci.yml

semgrep-sast:
  variables:
    SAST_ANALYZER_IMAGE_TAG: "3.7"

brakeman-sast:
  variables:
    SAST_ANALYZER_IMAGE_TAG: "3.1.1"

#========================================================

node_dependencies_dev:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - back/node_modules/
  script:
    - cd back
    - npm install
  only:
    changes:
      - back/package-lock.json

angular_dependencies_dev:
  stage: install_dependencies
  tags:
  - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - front/node_modules/
  script:
    - cd front
    - rm -rf node_modules/
    - npm install
    - npm uninstall angular2-signaturepad
    - npm install angular2-signaturepad@3.0.4
  only:
    changes:
      - front/package-lock.json

# FIXME QA
# FIXME PROD

#========================================================

sonarqube-check:
  stage: test
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  # cache:
  #   key: "${CI_JOB_NAME}"
  #   paths:
  #     - .sonar/cache
  script:
    - >
      sonar-scanner 
      -Dsonar.projectKey=elitech-ecole_ems3_AXzmfloY1eE81W_XHtln
      -Dsonar.qualitygate.wait=true
      -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts, 
      -Dsonar.test.inclusions=**/*.spec.ts
      -Dsonar.sources=back/controllers,back/models,back/middleware,front/src/app/
   
  allow_failure: true
  tags:
    - dev-docker

#========================================================

build_angular:
  stage: build
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - front/node_modules/
    policy: pull

  script:
      - cd front
      - node --max-old-space-size=8096 node_modules/@angular/cli/bin/ng build --configuration=dev --aot
  only:
    - develop
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - front/dist
    expire_in: 1 hour
#  when: manual

spotbugs-sast:
  stage: sast
  dependencies:
    - build
  variables:
    FAIL_NEVER: 1
  allow_failure: true
  artifacts:
    reports:
      sast: gl-sast-report.json

# dast:
  # dast_configuration:
    # site_profile: "Inted Group"
    # scanner_profile: "Quick Passive Test"

#======================================================

angular_docker_build:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - front/Dockerfile
      when: manual
      allow_failure: true # FIXME

node_docker_build:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - back/Dockerfile
      when: manual
      allow_failure: true # FIXME
#======================================================

deploy_angular_to_dev:
  stage: deploy
  dependencies: 
    - build_angular
  tags:
    - dev-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f front/dist /var/www/html/ems
  only:
    - develop
  
deploy_node_to_dev:
  stage: deploy

  tags:
    - dev-shell
  script:
    - cd back
    - ln -s ~/storage storage
    - npm install
    - pm2 delete index
    - pm2 start index.js -- --dev
   # - pm2 logs index
  only:
    - develop

#======================================================

deploy_angular_to_qa:
  stage: deploy
  dependencies: 
    - build_angular
  tags:
    - dev-docker # FIXME
  script:
    - docker pull $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
    - mkdir -p "$MOUNT_POINT"
    - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
  only:
    - develop
  when: manual

deploy_node_to_qa:
  stage: deploy

  tags:
    - dev-docker # FIXME
  script:
    - docker pull $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
    - mkdir -p "$MOUNT_POINT"
    - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
  only:
    - develop
  when: manual

#======================================================

deploy_angular_to_prod:
  stage: deploy
  dependencies: 
    - build_angular
  tags:
    - dev-docker # FIXME
  script:
    - docker pull $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
    - mkdir -p "$MOUNT_POINT"
    - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
  only:
    - main
  when: manual
  #environment: production
  
deploy_node_to_prod:
  stage: deploy

  tags:
    - dev-docker # FIXME
  script:
    - docker pull $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
    - mkdir -p "$MOUNT_POINT"
    - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
  only:
    - main
  when: manual
  #environment: production

