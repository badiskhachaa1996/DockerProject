stages:
  - Install
  - Build
#  - SAST
#  - DAST
#  - Docker
  - DEV # auto from develop
  - QA # auto from main
  - PROD2 # auto from main
  - PROD1 # Current PROD, MANUAL from main

#variables:
#  MOUNT_POINT: /builds/$CI_PROJECT_PATH/mnt
#  SAST_IMAGE_SUFFIX: '-fips'

#include:
#  - template: Security/SAST.gitlab-ci.yml

#semgrep-sast:
#  variables:
#    SAST_ANALYZER_IMAGE_TAG: "3.7"

#brakeman-sast:
#  variables:
#    SAST_ANALYZER_IMAGE_TAG: "3.1.1"

#==========================================================

install_back_dependencies_on_dev:
  stage: Install
  tags:
    - dev-shell
    
  script:
    - cd back
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - develop
    changes:
      - back/package.json

install_front_dependencies_on_dev:
  stage: Install
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/
      
  script:
    - cd front
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - develop
    changes:
      - front/package.json

install_forms-app_dependencies_on_dev:
  stage: Install
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/

  script:
    - cd forms-app
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - develop
    changes:
      - forms-app/package.json

#==========================================================

install_back_dependencies_on_qa:
  stage: Install
  tags:
    - qa-shell
    
  script:
    - cd back
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - back/package.json

install_front_dependencies_on_qa:
  stage: Install
  tags:
    - qa-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/

  script:
    - cd front
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - front/package.json

install_forms-app_dependencies_on_qa:
  stage: Install
  tags:
    - qa-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/

  script:
    - cd forms-app
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - forms-app/package.json

#==========================================================

install_back_dependencies_on_prod2:
  stage: Install
  tags:
    - prod2-shell

  script:
    - cd back
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - back/package.json

install_front_dependencies_on_prod2:
  stage: Install
  tags:
    - prod2-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/

  script:
    - cd front
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - front/package.json

install_forms-app_dependencies_on_prod2:
  stage: Install
  tags:
    - prod2-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/

  script:
    - cd forms-app
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - forms-app/package.json

#==========================================================

manual_install_back_dependencies_on_prod1:
  stage: Install
  tags:
    - prod1-shell

  script:
    - cd back
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - back/package.json
  when: manual

manual_install_front_dependencies_on_prod1:
  stage: Install
  tags:
    - prod1-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/

  script:
    - cd front
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - front/package.json
  when: manual

manual_install_forms-app_dependencies_on_prod1:
  stage: Install
  tags:
    - prod1-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/

  script:
    - cd forms-app
    - rm -rf node_modules/
    - npm install
  only:
    refs:
      - main
    changes:
      - forms-app/package.json
  when: manual

#==========================================================

# sonarqube-check:
#   image: 
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [""]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   # cache:
#   #   key: "${CI_JOB_NAME}"
#   #   paths:
#   #     - .sonar/cache
#   script:
#     - >
#       sonar-scanner 
#       -Dsonar.projectKey=elitech-ecole_ems3_AXzmfloY1eE81W_XHtln
#       -Dsonar.qualitygate.wait=true
#       -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts, 
#       -Dsonar.test.inclusions=**/*.spec.ts
#       -Dsonar.sources=back/controllers,back/models,back/middleware,front/src/app/
   
#   allow_failure: true
#   tags:
#     - dev-docker # FIXME QA PROD

#==========================================================

build_front_on_dev:
  stage: Build
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/
    policy: pull

  script:
      - cd front
      - node --max-old-space-size=4096 node_modules/@angular/cli/bin/ng build --configuration=dev
  only:
    - develop
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - front/dist
    expire_in: 1 hour

build_forms-app_on_dev:
  stage: Build
  tags:
    - dev-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/
    policy: pull

  script:
      - cd forms-app
      - node --max-old-space-size=4096 node_modules/@angular/cli/bin/ng build --configuration=dev
  only:
    - develop
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - forms-app/dist
    expire_in: 1 hour

#==========================================================

build_front_on_qa:
  stage: Build
  tags:
    - qa-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/
    policy: pull

  script:
      - cd front
      - node --max-old-space-size=4096 node_modules/@angular/cli/bin/ng build --configuration=qa
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - front/dist
    expire_in: 1 hour

build_forms-app_on_qa:
  stage: Build
  tags:
    - qa-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/
    policy: pull

  script:
      - cd forms-app
      - node --max-old-space-size=4096 node_modules/@angular/cli/bin/ng build --configuration=qa
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - forms-app/dist
    expire_in: 1 hour

#==========================================================

build_front_on_prod2:
  stage: Build
  tags:
    - prod2-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/
    policy: pull

  script:
      - cd front
      - node --max-old-space-size=8192 node_modules/@angular/cli/bin/ng build --configuration=prod2
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - front/dist
    expire_in: 1 hour

build_forms-app_on_prod2:
  stage: Build
  tags:
    - prod2-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/
    policy: pull

  script:
      - cd forms-app
      - node --max-old-space-size=8192 node_modules/@angular/cli/bin/ng build --configuration=prod2
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - forms-app/dist
    expire_in: 1 hour

#==========================================================

manual_build_front_on_prod1:
  stage: Build
  tags:
    - prod1-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-front
    paths:
      - front/node_modules/
    policy: pull

  script:
      - cd front
      - node --max-old-space-size=8192 node_modules/@angular/cli/bin/ng build --configuration=prod1
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - front/dist
    expire_in: 1 hour
  when: manual

manual_build_forms-app_on_prod1:
  stage: Build
  tags:
    - prod1-shell
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-forms-app
    paths:
      - forms-app/node_modules/
    policy: pull

  script:
      - cd forms-app
      - node --max-old-space-size=8192 node_modules/@angular/cli/bin/ng build --configuration=prod1
  only:
    - main
  artifacts:
    name: ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
    paths:
      - forms-app/dist
    expire_in: 1 hour
  when: manual

#spotbugs-sast:
#  dependencies:
#    - build_angular
#  variables:
#    FAIL_NEVER: 1
#  allow_failure: true
#  artifacts:
#    reports:
#      sast: gl-sast-report.json

# DAST:
  # dast_configuration:
    # site_profile: "Inted Group"
    # scanner_profile: "Quick Passive Test"

#==========================================================

# angular_docker_build:
#   stage: Docker
#   image: docker:24.0.5
#   services:
#     - docker:24.0.5-dind
#   before_script:
#     - docker info
#   script: 
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker build -t $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG .
#     - docker push $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       changes:
#         - front/Dockerfile
#       when: manual
#       allow_failure: true # FIXME

# node_docker_build:
#   stage: Docker
#   image: docker:24.0.5
#   services:
#     - docker:24.0.5-dind
#   before_script:
#     - docker info
#   script: 
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#     - docker build -t $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG .
#     - docker push $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event"
#       changes:
#         - back/Dockerfile
#       when: manual
#       allow_failure: true # FIXME

#==========================================================
  
deploy_front_to_dev:
  stage: DEV
  dependencies: 
    - build_front_on_dev
  tags:
    - dev-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f front/dist /var/www/html/ems
  only:
    - develop
    
deploy_forms-app_to_dev:
  stage: DEV
  dependencies: 
    - build_forms-app_on_dev
  tags:
    - dev-shell
  script:
    - sudo rm -r /var/www/html/ims/forms-app
    - sudo mv -f forms-app/dist/forms-app /var/www/html/ims
  only:
    - develop

deploy_back_to_dev:
  stage: DEV
  dependencies: 
    - install_back_dependencies_on_dev
  tags:
    - dev-shell
  script:
    - cd back
    - ln -s /home/gitlab-runner/storage storage
    - npm ci
    - pm2 delete index
    - pm2 start index.js --time -- --dev
    - pm2 save
  only:
    - develop

#==========================================================

deploy_front_to_qa:
  stage: QA
  dependencies: 
    - build_front_on_qa
  tags:
    - qa-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f front/dist /var/www/html/ems
  only:
    - main

deploy_forms-app_to_qa:
  stage: QA
  dependencies: 
    - build_forms-app_on_qa
  tags:
    - qa-shell
  script:
    - sudo rm -r /var/www/html/ims/forms-app
    - sudo mv -f forms-app/dist/forms-app /var/www/html/ims
  only:
    - main

deploy_back_to_qa:
  stage: QA
  dependencies: 
    - install_back_dependencies_on_qa
  tags:
    - qa-shell
  script:
    - cd back
    - ln -s /home/gitlab-runner/storage storage
    - npm ci
    - pm2 delete index
    - pm2 start index.js --time -- --qa
    - pm2 save
  only:
    - main

#==========================================================
  
deploy_front_to_prod2:
  stage: PROD2
  dependencies:
    - build_front_on_prod2
  tags:
    - prod2-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f front/dist /var/www/html/ems
  only:
    - main
    
deploy_forms-app_to_prod2:
  stage: PROD2
  dependencies:
    - build_forms-app_on_prod2
  tags:
    - prod2-shell
  script:
    - sudo rm -r /var/www/html/ims/forms-app
    - sudo mv -f forms-app/dist/forms-app /var/www/html/ims
  only:
    - main

deploy_back_to_prod2:
  stage: PROD2
  dependencies: 
    - install_back_dependencies_on_prod2
  tags:
    - prod2-shell
  script:
    - cd back
    - ln -s /home/ubuntu/storage storage
    - npm ci
    - pm2 delete index
    - pm2 start index.js --time -- --prod2
    - pm2 save
  only:
    - main

#==========================================================
  
manual_deploy_front_to_prod1:
  stage: PROD1
  dependencies:
    - manual_build_front_on_prod1
  tags:
    - prod1-shell
  script:
    - sudo rm -r /var/www/html/ems
    - sudo mv -f front/dist /var/www/html/ems
  only:
    - main
  when: manual

manual_deploy_forms-app_to_prod1:
  stage: PROD1
  dependencies:
    - manual_build_forms-app_on_prod1
  tags:
    - prod1-shell
  script:
    - sudo rm -r /var/www/html/ims/forms-app
    - sudo mv -f forms-app/dist/forms-app /var/www/html/ims
  only:
    - main
  when: manual

manual_deploy_back_to_prod1:
  stage: PROD1
  dependencies: 
    - manual_install_back_dependencies_on_prod1
  tags:
    - prod1-shell
  script:
    - cd back
    - ln -s /home/ubuntu/storage storage
    - npm ci
    - pm2 delete index
    - pm2 start index.js --time -- --prod1
    - pm2 save
  only:
    - main
  when: manual

# manual_deploy_angular_docker_to_prod:
#   stage: PROD
#   dependencies: 
#     - build_angular
#   tags:
#     - qa-docker # FIXME
#   script:
#     - docker pull $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
#     - mkdir -p "$MOUNT_POINT"
#     - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/front:$CI_COMMIT_REF_SLUG
#   only:
#     - main
#   when: manual
#   #environment: production
  
# manual_deploy_node_docker_to_prod:
#   stage: PROD

#   tags:
#     - qa-docker # FIXME
#   script:
#     - docker pull $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
#     - mkdir -p "$MOUNT_POINT"
#     - docker run -v "$MOUNT_POINT:/mnt" $CI_REGISTRY/elitech-ecole/ems3/back:$CI_COMMIT_REF_SLUG
#   only:
#     - main
#   when: manual
#   #environment: production

